#include <pthread.h>
#include <semaphore.h>
#include <stdio.h>

sem_t wrt;
pthread_mutex_t mutex;
int readcount=0, data=1;

void* reader(void* arg){
    pthread_mutex_lock(&mutex);
    readcount++;
    if(readcount==1) sem_wait(&wrt);
    pthread_mutex_unlock(&mutex);

    printf("Reader %ld reads data = %d\n",(long)arg,data);

    pthread_mutex_lock(&mutex);
    readcount--;
    if(readcount==0) sem_post(&wrt);
    pthread_mutex_unlock(&mutex);
    return NULL;
}

void* writer(void* arg){
    sem_wait(&wrt);
    data*=2;
    printf("Writer %ld modifies data to %d\n",(long)arg,data);
    sem_post(&wrt);
    return NULL;
}

int main(){
    pthread_t r1,r2,w1;
    sem_init(&wrt,0,1);
    pthread_mutex_init(&mutex,NULL);
    pthread_create(&r1,NULL,reader,(void*)1);
    pthread_create(&w1,NULL,writer,(void*)1);
    pthread_create(&r2,NULL,reader,(void*)2);
    pthread_join(r1,NULL); pthread_join(w1,NULL); pthread_join(r2,NULL);
    pthread_mutex_destroy(&mutex); sem_destroy(&wrt);
    return 0;
}

Output:
Reader 1 reads data = 1
Writer 1 modifies data to 2
Reader 2 reads data = 2
